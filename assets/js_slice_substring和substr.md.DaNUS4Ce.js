import{_ as s,c as i,o as l,a2 as t}from"./chunks/framework.DS0qWYV_.js";const d=JSON.parse('{"title":"JavaScript String中slice,substring和substr的区别","description":"","frontmatter":{},"headers":[],"relativePath":"js/slice,substring和substr.md","filePath":"js/slice,substring和substr.md"}'),r={name:"js/slice,substring和substr.md"},a=t('<h1 id="javascript-string中slice-substring和substr的区别" tabindex="-1">JavaScript String中slice,substring和substr的区别 <a class="header-anchor" href="#javascript-string中slice-substring和substr的区别" aria-label="Permalink to &quot;JavaScript String中slice,substring和substr的区别&quot;">​</a></h1><h2 id="相同点" tabindex="-1">相同点 <a class="header-anchor" href="#相同点" aria-label="Permalink to &quot;相同点&quot;">​</a></h2><ul><li>这三个方法都可以用来提取字符串的一部分，并返回一个新的字符串。</li><li>这三个方法省略第二个参数时，都是默认提取到字符串末尾。</li></ul><h2 id="不同点" tabindex="-1">不同点 <a class="header-anchor" href="#不同点" aria-label="Permalink to &quot;不同点&quot;">​</a></h2><ol><li><p>参数不同</p><ul><li>slice的参数是两个，分别是要提取的起始和结束位置（包括起始位置，不包括结束位置）。</li><li>slice的起始位置和结束位置都可以是负数，表示从字符串的末尾开始计算位置。</li><li>slice的起始位置若大于结束位置，则返回一个空字符串。</li><li>substring的参数是两个，分别是要提取的起始和结束位置（包括起始位置，不包括结束位置）。</li><li>substring的起始位置若大于结束位置，则会将开始位置和结束位置进行交换。</li><li>substring参数为负的话都会被转换为0，且会调换参数位置，始终以较小的参数为起始位置，较大的参数为结束位置。</li><li>substr的参数是两个，分别是要提取的起始位置和要提取的字符数。</li><li>substr的第一个参数若为负数，则会被转换为0。</li><li>substr的第二个参数若为负数则会返回空字符串。</li><li>substr的第二个参数若大于剩余字符的个数，则会被转换为剩余字符的个数。</li></ul></li><li><p>兼容性不同</p><ul><li>slice在所有浏览器中都得到了支持。</li><li>substring在 IE8 及以下版本中不支持。</li><li>substr在 IE8 及以下版本中不支持。</li></ul></li><li><p>性能不同</p><ul><li>slice的性能优于substring和substr。</li><li>substring的性能优于substr。</li><li>substr的性能最差。</li></ul></li></ol><h2 id="总结" tabindex="-1">总结 <a class="header-anchor" href="#总结" aria-label="Permalink to &quot;总结&quot;">​</a></h2><ul><li>slice、substring和substr都可以用来提取字符串的一部分，并返回一个新的字符串。</li><li>slice的参数是两个，分别是要提取的起始和结束位置（包括起始位置，不包括结束位置）。</li><li>substring的参数是两个，分别是要提取的起始和结束位置（包括起始位置，不包括结束位置）。</li><li>substr的参数是两个，分别是要提取的起始位置和要提取的字符数。</li><li>slice的起始位置可以是负数，表示从字符串的末尾开始计算位置。</li><li>substring的起始位置不能是负数，如果传递负数，则会被自动转换为0，且有可能会交换位置。</li><li>substr的起始位置可以是负数，如果传递负数，则会被自动转换为0，substr的第二个参数如果小于等于0则会返回空字符串。</li><li>slice的性能优于substring和substr。</li><li>substring的性能优于substr。</li><li>substr的性能最差。</li></ul>',7),e=[a];function u(n,b,c,o,_,g){return l(),i("div",null,e)}const p=s(r,[["render",u]]);export{d as __pageData,p as default};
